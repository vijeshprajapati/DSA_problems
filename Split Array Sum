//Question Link : https://leetcode.com/problems/split-array-largest-sum/
Code:
```
class Solution {
    // Just by using for each loop instead of normal for loop speed increased by 10%
    public int splitArray(int[] nums, int m) {
        //Solving this problem by using binary search
        //First searching the range 
        int start = 0, end =0;
        for(int i = 0;i<nums.length;i++){
            start = Math.max(start,nums[i]);
            end += nums[i];
        }
        
        while(start < end){
            int sum = 0;
            int pieces = 1;
            int mid = start + (end - start) / 2;
            for(int num : nums){
                if(num + sum > mid){
                    sum = num;
                    pieces++;
                }
                else{
                    sum += num;
                }
            }
            if(pieces > m){
                start = mid + 1;
            }
            else
                end = mid;
        }
        return end;
    }
}
```
